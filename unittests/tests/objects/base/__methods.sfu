title: base __methods tests
author: Joshua Thijssen <joshua@saffire-lang.org>

**********
import io;

a = "hello1";
foreach (a.__methods() as k,v) {
    io.print(v, "\n");
}
========
__ctor
__dtor
__boolean
__null
__numerical
__string
length
upper
ucfirst
lower
reverse
trim
ltrim
rtrim
toLocale
getLocale
index
__opr_add
__cmp_eq
__cmp_ne
__cmp_lt
__cmp_gt
__cmp_le
__cmp_ge
__cmp_in
__cmp_ni
__iterator
__key
__value
__rewind
__next
__hasNext
__length
__set
__remove
__get
__has
__splice
@@@@@
import io;

a = "hello1";
foreach (a.__methods(true) as k,v) {
    io.print(v, "\n");
}
========
__ctor
__dtor
__boolean
__null
__numerical
__string
length
upper
ucfirst
lower
reverse
trim
ltrim
rtrim
toLocale
getLocale
index
__opr_add
__cmp_eq
__cmp_ne
__cmp_lt
__cmp_gt
__cmp_le
__cmp_ge
__cmp_in
__cmp_ni
__iterator
__key
__value
__rewind
__next
__hasNext
__length
__set
__remove
__get
__has
__splice
__constants
__properties
__methods
__parents
__name
__implements
__memory
__annotations
__clone
__immutable?
__immutable
__refcount
__id
__opr_not
@@@@@@
import io;

class myclass {
    public method foo() {}
    public method bar() {}
    public property baz;
}

a = myclass();
foreach (a.__methods() as k,v) {
    io.print(v, "\n");
}
========
bar
foo
@@@@@@
import io;

class myclass extends string {
    public method foo() {}
    public method bar() {}
    public property baz;
}

a = myclass("a string");
foreach (a.__methods() as k,v) {
    io.print(v, "\n");
}
========
bar
foo
